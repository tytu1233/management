name: Salesforce CI/CD

on:
  push:
    branches:
      - develop
      - qa
      - main
  pull_request:
    branches:
      - qa
      - main

jobs:
  # DEVELOP - DONE#
  # push on develop - validate
  validate-develop:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Salesforce CLI
        run: npm install -g @salesforce/cli

      - name: Create server.key for JWT
        run: echo "${{ secrets.SF_DEV_JWT_KEY }}" > server.key

      - name: Authenticate to Dev Validation Org
        run: sf org login jwt --client-id ${{ secrets.SF_DEV_CONSUMER_KEY }} --jwt-key-file server.key --username ${{ secrets.SF_DEV_DEPLOYMENT_USER }} --instance-url ${{ secrets.SF_DEV_LOGIN_URL }} --set-default

      - name: Validate changes on Dev Validation Org
        run: sf project deploy validate --source-dir src --target-org default
        working-directory: .

  # PR on QA - deploy after merge
  deploy-qa:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'qa'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Salesforce CLI
        run: npm install -g @salesforce/cli

      - name: Create server.key for JWT
        run: echo "${{ secrets.SF_DEV_JWT_KEY }}" > server.key

      - name: Authenticate to QA Org
        run: sf org login jwt --client-id ${{ secrets.SF_QA_CONSUMER_KEY }} --jwt-key-file server.key --username ${{ secrets.SF_QA_USERNAME }} --instance-url ${{ secrets.SF_QA_LOGIN_URL }} --set-default

      - name: Deploy to QA Org
        run: sf project deploy start --source-dir src --target-org default
        working-directory: .

  validate-production-after-qa:
    runs-on: ubuntu-latest
    needs: deploy-qa
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'qa'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Salesforce CLI
        run: npm install -g @salesforce/cli

      - name: Create server.key for JWT
        run: echo "${{ secrets.SF_DEV_JWT_KEY }}" > server.key

      - name: Authenticate to Production Org
        run: sf org login jwt --client-id ${{ secrets.SF_PROD_CONSUMER_KEY }} --jwt-key-file server.key --username ${{ secrets.SF_PROD_USERNAME }} --instance-url ${{ secrets.SF_PROD_LOGIN_URL }} --set-default

      - name: Validate changes on Production Org
        run: sf project deploy validate --source-dir src --target-org default
        working-directory: .

  # push on QA - validate
  validate-qa:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/qa'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Salesforce CLI
        run: npm install -g @salesforce/cli

      - name: Create server.key for JWT
        run: echo "${{ secrets.SF_DEV_JWT_KEY }}" > server.key

      - name: Authenticate to QA Org
        run: sf org login jwt --client-id ${{ secrets.SF_QA_CONSUMER_KEY }} --jwt-key-file server.key --username ${{ secrets.SF_QA_USERNAME }} --instance-url ${{ secrets.SF_QA_LOGIN_URL }} --set-default

      - name: Validate changes on QA Org
        run: sf project deploy validate --source-dir src --target-org default
        working-directory: .

  #PRODUCTION - DONE

  validate-production:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Salesforce CLI
        run: npm install -g @salesforce/cli

      - name: Create server.key for JWT
        run: echo "${{ secrets.SF_DEV_JWT_KEY }}" > server.key

      - name: Authenticate to Prod Validation Org
        run: sf org login jwt --client-id ${{ secrets.SF_PROD_CONSUMER_KEY }} --jwt-key-file server.key --username ${{ secrets.SF_PROD_USERNAME }} --instance-url ${{ secrets.SF_PROD_LOGIN_URL }} --set-default

      - name: Validate changes on Prod Validation Org
        run: sf project deploy validate --source-dir src --target-org default
        working-directory: .

  # PR on main - validate then deploy
  validate-and-deploy-prod:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Salesforce CLI
        run: npm install -g @salesforce/cli

      - name: Create server.key for JWT
        run: echo "${{ secrets.SF_DEV_JWT_KEY }}" > server.key

      - name: Authenticate to Prod Validation Org
        run: sf org login jwt --client-id ${{ secrets.SF_PROD_CONSUMER_KEY }} --jwt-key-file server.key --username ${{ secrets.SF_PROD_USERNAME }} --instance-url ${{ secrets.SF_PROD_LOGIN_URL }} --set-default

      - name: Validate changes on Prod Validation Org
        run: sf project deploy validate --source-dir src --target-org default
        working-directory: .

      - name: Authenticate to Production Org
        run: sf org login jwt --client-id ${{ secrets.SF_PROD_CONSUMER_KEY }} --jwt-key-file server.key --username ${{ secrets.SF_PROD_USERNAME }} --instance-url ${{ secrets.SF_PROD_LOGIN_URL }} --set-default

      - name: Deploy to Production Org
        run: sf project deploy start --source-dir src --target-org default
        working-directory: .